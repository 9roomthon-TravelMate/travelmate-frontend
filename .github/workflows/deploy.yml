name: Build and Deploy frontend

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: travelmate7/travelmate-frontend:latest
          build-args: |
            REACT_APP_API_BASE_URL=${{ secrets.REACT_APP_API_BASE_URL }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - name: Get public IP
        uses: haythem/public-ip@v1.3
        id: ip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/TravelMate-GitHubActionsRole

      - name: Add public IP to EC2 security group
        run: aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port ${{ secrets.EC2_SSH_PORT }} --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Execute remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_SSH_HOST }}
          port: ${{ secrets.EC2_SSH_PORT }}
          username: ${{ secrets.EC2_SSH_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd travelmate
            sudo docker compose pull frontend
            sudo docker compose up frontend -d

      - name: Remove public IP from EC2 security group
        run: aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port ${{ secrets.EC2_SSH_PORT }} --cidr ${{ steps.ip.outputs.ipv4 }}/32
